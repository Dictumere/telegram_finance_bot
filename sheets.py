import gspread
from oauth2client.service_account import ServiceAccountCredentials


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞
def get_sheet(sheet_title: str):
    scope = ["https://spreadsheets.google.com/feeds", 
             "https://www.googleapis.com/auth/spreadsheets", 
             "https://www.googleapis.com/auth/drive.file", 
             "https://www.googleapis.com/auth/drive"]

    creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
    client = gspread.authorize(creds)

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    spreadsheet = client.open(sheet_title)
    return spreadsheet


def add_expense(sheet_title: str, month_sheet: str, category: str, day: str, amount: float):
    scope = ["https://spreadsheets.google.com/feeds", 
             "https://www.googleapis.com/auth/spreadsheets", 
             "https://www.googleapis.com/auth/drive.file", 
             "https://www.googleapis.com/auth/drive"]

    creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
    client = gspread.authorize(creds)

    spreadsheet = client.open(sheet_title)
    sheet = spreadsheet.worksheet(month_sheet)

    values = sheet.get_all_values()

    # üîπ 1. –ù–∞–π–¥—ë–º —Å—Ç—Ä–æ–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    row_index = None
    for i, row in enumerate(values):
        if category in row:
            row_index = i + 1
            break
    if not row_index:
        raise Exception("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ")

    # üîπ 2. –°—Ç–æ–ª–±–µ—Ü –ø–æ —á–∏—Å–ª—É (—Å—Ç—Ä–æ–∫–∞ 13 = index 12)
    header_row = values[12]
    col_index = None
    for j, cell in enumerate(header_row):
        if cell.strip() == str(day):
            col_index = j + 1
            break
    if not col_index:
        raise Exception("–ß–∏—Å–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å—Ç—Ä–æ–∫–µ 13")

    # üîπ 3. –û–±–Ω–æ–≤–ª—è–µ–º —è—á–µ–π–∫—É
    sheet.update_cell(row_index, col_index, amount)

    # üîπ 4. –ß—Ç–µ–Ω–∏–µ –¥–æ–ø. –∑–Ω–∞—á–µ–Ω–∏–π
    total_balance = sheet.acell("J6").value

    # –û—Å—Ç–∞—Ç–æ–∫ –ø–æ –≥—Ä—É–ø–ø–µ
    group_to_cell = {
        "–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã": "J22",
        "–û—Ç–¥—ã—Ö –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ": "J28",
        "–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∏ –∫—Ä–µ–¥–∏—Ç—ã": "J34"
    }
    group_cell = group_to_cell.get(category_group(category))  # –Ω—É–∂–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∏–∂–µ
    group_balance = sheet.acell(group_cell).value if group_cell else "?"

    # –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –∑–∞ –¥–µ–Ω—å
    daily_spent_cell = f"{header_to_col(col_index)}35"  # —Å—Ç—Ä–æ–∫–∞ 35 + –∫–æ–ª–æ–Ω–∫–∞
    daily_spent = sheet.acell(daily_spent_cell).value

    return total_balance, group_balance, daily_spent


def category_group(category):
    for group, cats in CATEGORIES.items():
        if category in cats:
            return group
    return None


def header_to_col(col_index):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞ –≤ –±—É–∫–≤—É Excel (–Ω–∞–ø—Ä–∏–º–µ—Ä, 26 ‚Üí Z)"""
    col = ""
    while col_index > 0:
        col_index, remainder = divmod(col_index - 1, 26)
        col = chr(65 + remainder) + col
    return col


def get_summary(sheet_title: str, month_sheet: str, group: str, day: str):
    scope = ["https://spreadsheets.google.com/feeds", 
             "https://www.googleapis.com/auth/spreadsheets", 
             "https://www.googleapis.com/auth/drive.file", 
             "https://www.googleapis.com/auth/drive"]
    
    creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
    client = gspread.authorize(creds)

    sheet = client.open(sheet_title).worksheet(month_sheet)

    # –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: J6
    total = sheet.acell("J6").value

    # –û—Å—Ç–∞—Ç–æ–∫ –ø–æ –≥—Ä—É–ø–ø–µ
    group_cells = {
        "–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã": "J22",
        "–û—Ç–¥—ã—Ö –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ": "J28",
        "–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∏ –∫—Ä–µ–¥–∏—Ç—ã": "J34"
    }
    group_cell = group_cells.get(group)
    group_rest = sheet.acell(group_cell).value if group_cell else "?"

    # –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –∑–∞ –¥–µ–Ω—å: Z35 = –∫–æ–ª–æ–Ω–∫–∞ –ø–æ —á–∏—Å–ª—É, –Ω–æ —Å—Ç—Ä–æ–∫–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞
    # –ù–∞–π–¥—ë–º –∫–æ–ª–æ–Ω–∫—É –ø–æ –¥–Ω—é –≤ —Å—Ç—Ä–æ–∫–µ 13
    headers = sheet.row_values(13)
    col_letter = None
    for i, val in enumerate(headers):
        if val.strip() == str(day):
            col_letter = gspread.utils.rowcol_to_a1(1, i + 1)[0]  # –ø–æ–ª—É—á–∏–º –±—É–∫–≤—É —Å—Ç–æ–ª–±—Ü–∞
            break

    daily_cell = f"{col_letter}35" if col_letter else None
    daily = sheet.acell(daily_cell).value if daily_cell else "?"

    return total, group_rest, daily
